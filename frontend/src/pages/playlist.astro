---
import Layout from "../layouts/Layout.astro";

// Pre-existing array with song data structure
const songs1 = [
  [
    {
      "title": "back to friends",
      "artist": "sombr",
      "popularity": 99,
      "link": "https://open.spotify.com/track/0FTmksd2dxiE5e3rWyJXs6"
    },
    99
  ],
  [
    {
      "title": "undressed",
      "artist": "sombr",
      "popularity": 95,
      "link": "https://open.spotify.com/track/4AajxCEwGEsmHmT4H1TwjY"
    },
    95
  ],
  [
    {
      "title": "No One Noticed",
      "artist": "The Marías",
      "popularity": 92,
      "link": "https://open.spotify.com/track/2QqQzWjGLJ1QOcJ2sm1nYY"
    },
    92
  ],
  [
    {
      "title": "Cariño",
      "artist": "The Marías",
      "popularity": 88,
      "link": "https://open.spotify.com/track/4iW5JJy6xAd5uY5dGxmcfl"
    },
    88
  ],
  [
    {
      "title": "Hold It Together",
      "artist": "The Marías",
      "popularity": 85,
      "link": "https://open.spotify.com/track/6gSI0bwJSP5aEPJ7lCrqrT"
    },
    85
  ],
  [
    {
      "title": "I Don't Know You",
      "artist": "The Marías",
      "popularity": 82,
      "link": "https://open.spotify.com/track/4c7OLf2cmi7FkFpwvnAzhG"
    },
    82
  ]
];
// const song = await fetch("http://localhost:8000/genius/create" + new URLSearchParams({
//   "user_id": "aanvi"
// }), {
//   method: "GET",
//   headers: {
//     "Content-Type": "application/json"
//   }
// }).then(res => res.json());

const songs = [
  {
    id: 1,
    name: "Morning Vibes",
    description: "Perfect for starting your day",
    image: "https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=400&h=300&fit=crop",
    songCount: 24,
    duration: "1h 32m",
    lastPlayed: "2 days ago"
  },
  {
    id: 2,
    name: "Focus Flow",
    description: "Deep work and concentration",
    image: "https://images.unsplash.com/photo-1598488035139-bdbb2231ce04?w=400&h=300&fit=crop",
    songCount: 18,
    duration: "58m",
    lastPlayed: "1 week ago"
  },
  {
    id: 3,
    name: "Chill Evenings",
    description: "Relaxing tunes for unwinding",
    image: "https://images.unsplash.com/photo-1501594907352-04cda38ebc29?w=400&h=300&fit=crop",
    songCount: 31,
    duration: "2h 15m",
    lastPlayed: "3 days ago"
  },
  {
    id: 4,
    name: "Workout Energy",
    description: "High-energy tracks for exercise",
    image: "https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=400&h=300&fit=crop",
    songCount: 27,
    duration: "1h 48m",
    lastPlayed: "5 days ago"
  },
  {
    id: 5,
    name: "Study Sessions",
    description: "Instrumental and ambient sounds",
    image: "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=300&fit=crop",
    songCount: 22,
    duration: "1h 23m",
    lastPlayed: "1 week ago"
  },
  {
    id: 6,
    name: "Road Trip Mix",
    description: "Adventures and good times",
    image: "https://images.unsplash.com/photo-1506905925346-21bda4d32df4?w=400&h=300&fit=crop",
    songCount: 35,
    duration: "2h 42m",
    lastPlayed: "2 weeks ago"
  }
];
// const response = await fetch(`http://localhost:8000/genius/generate?userid=${encodeURIComponent("aanvi")}`);
// let songs = [];

// try {
//   const data = await response.json();
//   songs = data.songs || []; // or adjust based on what your backend returns
// } catch (error) {
//   console.error("Fetch failed:", error);
// }

---

<Layout>
  <div class="bg-white text-black font-sans min-h-screen px-6 py-12">
    <div class="max-w-7xl mx-auto">
      <div class="mb-10">
        <h1 class="text-4xl font-extrabold mb-2 tracking-tight">My songs</h1>
        <p class="text-lg text-gray-600">Your personal collection of curated music</p>
      </div>

      <h2 class="text-2xl font-semibold mb-6">Recently Played</h2>

      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
        {songs.map((song) => (
  <div 
    class="relative bg-black text-white rounded-[1.5rem] overflow-hidden shadow-xl transition-all duration-300 group hover:-translate-y-1 hover:shadow-2xl"
    data-song-id={song.id}
          >
            <!-- Image with corner cut -->
            <div class="relative">
              <img 
                src={song.image} 
                alt={song.name}
                class="w-full h-48 object-cover brightness-75 group-hover:brightness-100 transition duration-300 rounded-t-[1.5rem]"
              />
              <!-- Play button -->
              <button 
                aria-label={"Play " + song.name}
                class="absolute top-4 right-4 w-11 h-11 bg-white text-black rounded-full flex items-center justify-center hover:scale-110 transition-transform duration-200 group-hover:shadow-md"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                  <path d="M6 4l10 6-10 6V4z" />
                </svg>
              </button>

              <!-- Share button -->
              <div class="absolute top-4 left-4 relative">
                <button 
                  aria-label={"Share " + song.name}
                  class={`share-btn w-11 h-11 bg-white text-black rounded-full flex items-center justify-center hover:scale-110 transition-transform duration-200 group-hover:shadow-md`}
                  data-song-id={song.id}
                >
                  <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M15 8a3 3 0 1 0-2.977-2.63l-4.94 2.47a3 3 0 1 0 0 4.319l4.94 2.47a3 3 0 1 0 .895-1.789l-4.94-2.47a3.027 3.027 0 0 0 0-.74l4.94-2.47C13.456 7.68 14.19 8 15 8z"/>
                  </svg>
                </button>
                
                <!-- Share dropdown -->
                <div class={`share-dropdown absolute top-12 left-0 bg-white rounded-lg shadow-lg border border-gray-200 min-w-[160px] z-50 opacity-0 invisible transition-all duration-200`} data-song-id={song.id}>
                  <div class="py-2">
                    <a 
                      href="#"
                      class="flex items-center gap-3 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors email-share"
                      data-song-name={song.name}
                      data-song-description={song.description}
                      data-song-count={song.songCount}
                      data-song-duration={song.duration}
                      data-song-id={song.id}
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
                        <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
                      </svg>
                      Share via Email
                    </a>
                    <a 
                      href="#"
                      class="flex items-center gap-3 px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 transition-colors whatsapp-share"
                      data-song-name={song.name}
                      data-song-description={song.description}
                      data-song-count={song.songCount}
                      data-song-duration={song.duration}
                      data-song-id={song.id}
                    >
                      <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.087z"/>
                      </svg>
                      Share via WhatsApp
                    </a>
                  </div>
                </div>
              </div>
            </div>

            <!-- Content section -->
            <div class="p-6 bg-white text-black rounded-b-[1.5rem]">
              <h3 class="text-xl font-bold mb-1">{song.name}</h3>
              <p class="text-sm text-gray-500 mb-4">{song.description}</p>
              <div class="flex justify-between items-center text-sm text-gray-600">
                <div class="flex gap-3">
                  <span>♪ {song.songCount}</span>
                  <span>⏱ {song.duration}</span>
                </div>
                <span class="text-xs text-gray-400">{song.lastPlayed}</span>
              </div>
            </div>
      </div>
          ))}
    </div>
  </div>

  <style>
    .group:hover .bg-contain {
      background-image: url('/Logo-white.png') !important;
    }
  </style>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const shareButtons = document.querySelectorAll('.share-btn');
    const shareDropdowns = document.querySelectorAll('.share-dropdown');

    shareButtons.forEach((button, index) => {
      const dropdown = shareDropdowns[index];
      
      button.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        
        // Close all other dropdowns
        shareDropdowns.forEach((dd, ddIndex) => {
          if (ddIndex !== index) {
            dd.classList.add('opacity-0', 'invisible');
          }
        });
        
        // Toggle current dropdown
        dropdown.classList.toggle('opacity-0');
        dropdown.classList.toggle('invisible');
      });
    });

    // Handle email sharing
    document.querySelectorAll('.email-share').forEach(emailLink => {
      emailLink.addEventListener('click', function(e) {
        e.preventDefault();
        const element = e.currentTarget as HTMLElement;
        const songName = element.dataset.songName || '';
        const songDescription = element.dataset.songDescription || '';
        const songCount = element.dataset.songCount || '';
        const songDuration = element.dataset.songDuration || '';
        const songId = element.dataset.songId || '';
        const currentUrl = window.location.origin + '/playlist?song=' + songId;
        
        const subject = `Check out this song: ${songName}`;
        const body = `Hey! I thought you'd like this song: "${songName}" - ${songDescription}. It has ${songCount} tracks and lasts ${songDuration}.\n\nCheck it out here: ${currentUrl}`;
        
        window.location.href = `mailto:?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
      });
    });

    // Handle WhatsApp sharing
    document.querySelectorAll('.whatsapp-share').forEach(whatsappLink => {
      whatsappLink.addEventListener('click', function(e) {
        e.preventDefault();
        const element = e.currentTarget as HTMLElement;
        const songName = element.dataset.songName || '';
        const songDescription = element.dataset.songDescription || '';
        const songCount = element.dataset.songCount || '';
        const songDuration = element.dataset.songDuration || '';
        const songId = element.dataset.songId || '';
        const currentUrl = window.location.origin + '/playlist?song=' + songId;
        
        const message = `Check out this song: "${songName}" - ${songDescription}. It has ${songCount} tracks and lasts ${songDuration}!\n\nCheck it out here: ${currentUrl}`;
        
        window.open(`https://wa.me/?text=${encodeURIComponent(message)}`, '_blank');
      });
    });

    // Close dropdowns when clicking outside
    document.addEventListener('click', function(e) {
      const target = e.target as Element;
      if (target && !target.closest('.share-btn') && !target.closest('.share-dropdown')) {
        shareDropdowns.forEach(dropdown => {
          dropdown.classList.add('opacity-0', 'invisible');
        });
      }
    });
  });
</script>
